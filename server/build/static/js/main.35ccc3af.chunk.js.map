{"version":3,"sources":["pages/components/ThemeButton.js","styles/theme.js","pages/components/Oauth.js","pages/components/Consts.js","pages/components/GoogleBtn.js","pages/components/NavBar.js","pages/components/GraphsHome.js","pages/Home.js","pages/About.js","pages/PrivacyPolicy.js","pages/TermsofUse.js","pages/Dashboard.js","pages/SignIn.js","App.js","serviceWorker.js","index.js","images/logo.png"],"names":["index","colors","modes","dark","text","background","primary","muted","secondary","default","highContrast","props","useColorMode","mode","setMode","id","sx","backgroundColor","color","borderRadius","border","height","onClick","e","indexOf","updateColor","next","length","AuthButton","style","that","dualScreenLeft","undefined","window","screenLeft","screenX","dualScreenTop","screenTop","screenY","width","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","systemZoom","availWidth","windowOptions","_oauthWindow","open","token","localStorage","getItem","_oauthInterval","setInterval","closed","clearInterval","history","push","ShowAuthWindow","this","children","React","Component","withRouter","GoogleBtn","className","GoogleBtnAlt","px","py","alignItems","position","borderBottom","borderImage","to","src","logo","alt","fontWeight","path","margin","ThemeButton","Graph1Home","graphdata","name","Total","COLORS","RADIAN","Math","PI","data","labelLine","label","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","toFixed","dataKey","map","entry","key","wrapperStyle","Graph2Home","pv","amt","top","right","left","bottom","stroke","strokeDasharray","barSize","Graph3Home","Graph4Home","tick","fontSize","fillOpacity","Graph5Home","Received","Sent","type","activeDot","r","Graph6Home","graphdata1","weeks","total1","i","value1","Weeks","value2","href","Dashboard","client","createClient","url","SignIn","code","URLSearchParams","location","search","get","setItem","mutation","toPromise","then","result","signIn","console","log","close","class","fetchOptions","headers","authorization","App","theme","value","NavBar","About","PrivacyPolicy","component","Home","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.35ccc3af.chunk.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, useColorMode } from \"theme-ui\";\n\n\nconst modes = [\"default\", \"dark\"];\nconst  text = [\"light\", \"dark \"];\n\nvar index;\n\nfunction updateColor(mode) {\n    index = modes.indexOf(mode);\n}\n\nexport default (props) => {\n    const [mode, setMode] = useColorMode();\n    return (\n        <button\n            id=\"themeButton\"\n            sx={{\n                backgroundColor: \"text\",\n                color: \"background\",\n                borderRadius: \"3px\",\n                border: \"0px\",\n                height: \"34px\",\n            }}\n            onClick={(e) => {\n                updateColor(mode);\n                let next = modes[(index + 1) % modes.length];\n                setMode(next);\n            }}\n        >\n            {text[(modes.indexOf(mode) + 1) % modes.length]} theme\n        </button>\n    );\n};\n","export default {\n    colors: {\n        modes: {\n            dark: {\n                text: \"#fff\",\n                background: \"#222\",\n                primary: \"#0cf\",\n                muted: \"#444\",\n                secondary: \"#000\",\n            },\n            default: {\n                text: \"#333\",\n                background: \"#f8f7fa\",\n                primary: \"#33e\",\n                muted: \"#333\",\n                secondary: \"#fff\",\n            },\n            highContrast: {\n                text: \"#000\",\n                background: \"#fff\",\n                primary: \"#33e\",\n                muted: \"#333\",\n                secondary: \"#fff\",\n            },\n        },\n    },\n};\n","import React from \"react\";\nimport * as Consts from \"./Consts\";\nimport { withRouter } from \"react-router-dom\";\n\n//Authorization popup window code\nclass AuthButton extends React.Component {\n    render() {\n        function ShowAuthWindow(that) {\n            const dualScreenLeft =\n                window.screenLeft !== undefined\n                    ? window.screenLeft\n                    : window.screenX;\n            const dualScreenTop =\n                window.screenTop !== undefined\n                    ? window.screenTop\n                    : window.screenY;\n\n            const width = window.innerWidth\n                ? window.innerWidth\n                : document.documentElement.clientWidth\n                ? document.documentElement.clientWidth\n                : window.screen.width;\n            const height = window.innerHeight\n                ? window.innerHeight\n                : document.documentElement.clientHeight\n                ? document.documentElement.clientHeight\n                : window.screen.height;\n\n            const systemZoom = width / window.screen.availWidth;\n            const left = (width - 500) / 2 / systemZoom + dualScreenLeft;\n            const top = (height - 650) / 2 / systemZoom + dualScreenTop;\n            var windowName = \"ConnectWithOAuth\"; // should not include space for IE\n            var windowOptions =\n                \"location=0,status=0,width=500,height=650,top=\" +\n                top +\n                \",left=\" +\n                left;\n            that._oauthWindow = window.open(\n                Consts.OAUTHLINK,\n                windowName,\n                windowOptions\n            );\n            // get rid of old token\n            var token = localStorage.getItem(\"token\");\n            that._oauthInterval = window.setInterval(function () {\n                // wait till token changed or we closed the window\n                if (\n                    token !== localStorage.getItem(\"token\") ||\n                    that._oauthWindow.closed\n                ) {\n                    window.clearInterval(that._oauthInterval);\n                    that.props.history.push(\"/dashboard\");\n                }\n            }, 500);\n        }\n        return (\n            <button\n                style={{ background: \"transparent\", border: \"none\" }}\n                onClick={() => {\n                    ShowAuthWindow(this);\n                }}\n            >\n                {this.props.children}\n            </button>\n        );\n    }\n}\n\nexport default withRouter(AuthButton);\n","export const OAUTHLINK = \"https://accounts.google.com/o/oauth2/auth?access_type=online&client_id=561581849507-80tuicn3gknfa01ia5i644i87hbni5m6.apps.googleusercontent.com&redirect_uri=https%3A%2F%2Finsightbox.xyz%2Fsignin&response_type=code&scope=https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fgmail.readonly+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile&state=state-token\"\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport \"../../styles/GoogleBtn.css\";\nimport AuthButton from \"./Oauth\";\n\nexport const GoogleBtn = () => (\n    <AuthButton>\n        <div id=\"gSignInWrapper\">\n            <span className=\"label\" sx={{ color: \"text\" }}>\n                Sign up with :{\" \"}\n            </span>\n            <div id=\"customBtn\" className=\"customGPlusSignIn\">\n                <span className=\"icon\"></span>\n                <span className=\"buttonText\">Google</span>\n            </div>\n        </div>\n    </AuthButton>\n);\n\nexport const GoogleBtnAlt = () => (\n    <AuthButton>\n        <div id=\"gSignInWrapper\">\n            <div id=\"customBtnAlt\" className=\"customGPlusSignIn\">\n                <span className=\"iconAlt\"></span>\n                <span className=\"buttonTextAlt\">Sign in with Google</span>\n            </div>\n        </div>\n    </AuthButton>\n);\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport { Flex, Text } from \"rebass\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport ThemeButton from \"./ThemeButton\";\nimport logo from \"../../images/logo.png\";\nimport { GoogleBtnAlt } from \"./GoogleBtn\";\n\nexport default (props) => (\n    <div id=\"topbar-container\" style={{ height: \"82px\" }}>\n        <div id=\"topbar-fixed\">\n            <Flex\n                px={2}\n                py={2}\n                alignItems=\"center\"\n                sx={{\n                    backgroundColor: \"secondary\",\n                    color: \"text\",\n                    position: \"static\",\n                    borderBottom: \"3px solid\",\n                    height: \"85px\",\n                    borderImage:\n                        \"linear-gradient(to right,  #40a1f1 25%, #65AD50 25%, #65AD50 50%, #FFD151 50%, #FFD151 75%, #f13333 75%, #f13333 100%) 5\",\n                }}\n            >\n                <Link to=\"/\">\n                    <Flex alignItems=\"center\">\n                        <img src={logo} alt=\"insightBox\" width=\"75\" />\n                        <Text sx={{ color: \"text\" }} fontWeight=\"bold\">\n                            insightBox\n                        </Text>\n                    </Flex>\n                </Link>\n                <Switch>\n                    <Route path=\"/signin\"></Route>\n                    <Route path={[\"/dashboard\"]}>\n                        <div sx={{ margin: \"0 auto\" }} />\n                        <ThemeButton />\n                    </Route>\n                    <Route path=\"/\">\n                        <div sx={{ margin: \"0 auto\" }} />\n                        <div>\n                            <Link to=\"/\" sx={{ color: \"text\" }}>\n                                Home\n                            </Link>\n                            &nbsp;&nbsp;|&nbsp;&nbsp;\n                            <Link to=\"/about\" sx={{ color: \"text\" }}>\n                                About\n                            </Link>\n                            &nbsp;&nbsp;|&nbsp;&nbsp;\n                            <Link to=\"/privacypolicy\" sx={{ color: \"text\" }}>\n                                Privacy Policy\n                            </Link>\n                            &nbsp;&nbsp;|&nbsp;&nbsp;\n                            <Link to=\"/termsofuse\" sx={{ color: \"text\" }}>\n                                Terms Of Use\n                            </Link>\n                        </div>\n                        <div sx={{ margin: \"0 auto\" }} />\n                        <ThemeButton />\n                        <GoogleBtnAlt />\n                    </Route>\n                </Switch>\n            </Flex>\n        </div>\n    </div>\n);\n","import React from \"react\";\nimport {\n    PieChart,\n    Pie,\n    Cell,\n    LineChart,\n    Line,\n    Legend,\n    BarChart,\n    Bar,\n    XAxis,\n    YAxis,\n    Tooltip,\n    CartesianGrid,\n    Radar,\n    RadarChart,\n    PolarGrid,\n    PolarAngleAxis,\n    PolarRadiusAxis,\n\n} from \"recharts\";\n\nexport const Graph1Home = () => {\n    const graphdata = [\n        { name: \"Monday\", Total: 23 },\n        { name: \"Tuesday\", Total: 26 },\n        { name: \"Wednesday\", Total: 24 },\n        { name: \"Thursday\", Total: 47 },\n        { name: \"Friday\", Total: 33 },\n        { name: \"Sunday\", Total: 11 },\n        { name: \"Sunday\", Total: 10 },\n    ];\n\n    const COLORS = [\n        \"#40a1f1\",\n        \"#65AD50\",\n        \"#FFD151\",\n        \"#FF8042\",\n        \"#f13333\",\n        \"#9636ff\",\n        \"#3461d1\",\n    ];\n\n    const RADIAN = Math.PI / 180;\n    const renderCustomizedLabel = ({\n        cx,\n        cy,\n        midAngle,\n        innerRadius,\n        outerRadius,\n        percent,\n        index,\n    }) => {\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n        return (\n            <text\n                x={x}\n                y={y}\n                fill=\"white\"\n                textAnchor={x > cx ? \"start\" : \"end\"}\n                dominantBaseline=\"central\"\n            >\n                {`${(percent * 100).toFixed(0)}%`}\n            </text>\n        );\n    };\n    return (\n        <div>\n            <div className=\"graph-title\">\n                Email Received %<br /> Day of the Week\n            </div>\n\n            <PieChart width={170} height={150}>\n                <Pie\n                    data={graphdata}\n                    labelLine={false}\n                    label={renderCustomizedLabel}\n                    outerRadius=\"100%\"\n                    fill=\"#8884d8\"\n                    dataKey=\"Total\"\n                >\n                    {graphdata.map((entry, index) => (\n                        <Cell\n                            key={`cell-${index}`}\n                            fill={COLORS[index % COLORS.length]}\n                        />\n                    ))}\n                </Pie>\n                <Tooltip wrapperStyle={{ backgroundColor: \"#ccc\" }} />\n            </PieChart>\n        </div>\n    );\n};\n\nexport const Graph2Home = () => {\n    const graphdata = [\n        { name: \"M\", Total: 23, pv: 2400, amt: 2400 },\n        { name: \"T\", Total: 26, pv: 2400, amt: 2400 },\n        { name: \"W\", Total: 24, pv: 2400, amt: 2400 },\n        { name: \"T\", Total: 47, pv: 2400, amt: 2400 },\n        { name: \"F\", Total: 33, pv: 2400, amt: 2400 },\n        { name: \"S\", Total: 11, pv: 2400, amt: 2400 },\n        { name: \"S\", Total: 10, pv: 2400, amt: 2400 },\n    ];\n\n    return (\n        <div>\n            <div className=\"graph-title\">Emails Received per Day</div>\n\n            <BarChart\n                width={400}\n                height={165}\n                data={graphdata}\n                margin={{ top: 5, right: 20, left: -20, bottom: 5 }}\n            >\n                <XAxis dataKey=\"name\" stroke=\"#47494d\" />\n                <YAxis />\n                <Tooltip />\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n                <Bar dataKey=\"Total\" fill=\"#40a1f1\" barSize={30} />\n            </BarChart>\n        </div>\n    );\n};\n\nexport const Graph3Home = () => {\n    var avg_day = 11.3;\n    var avg_week = 79.1;\n    var avg_month = 316.4;\n\n    return (\n        <div id=\"graph3\">\n            <div className=\"graph-title\">Sent</div>\n\n            <div className=\"graph-title2\">Average per Day</div>\n            <div className=\"numbers\">{avg_day}</div>\n\n            <div className=\"graph-title2\">Average per Week</div>\n            <div className=\"numbers\">{avg_week}</div>\n\n            <div className=\"graph-title2\">Average per Month</div>\n            <div className=\"numbers\">{avg_month}</div>\n        </div>\n    );\n};\n\nexport const Graph4Home = () => {\n    const graphdata = [\n        { \"name\": \"Sunday\", \"values\": 10},\n        { \"name\": \"Monday\", \"values\": 23},\n        { \"name\": \"Tuesday\", \"values\": 26},\n        { \"name\": \"Wednesday\", \"values\": 24},\n        { \"name\": \"Thursday\", \"values\": 47},\n        { \"name\": \"Friday\", \"values\": 33},\n        { \"name\": \"Saturday\", \"values\": 11},\n        \n    ];\n\n    return (\n        <div>\n            <div className=\"graph-title\">Received per Week Day</div>\n            <RadarChart\n                outerRadius={65}\n                width={270}\n                height={140}\n                data={graphdata}\n            >\n                <PolarGrid />\n                <PolarAngleAxis dataKey=\"name\" tick={{ fontSize: 12 }} />\n                <PolarRadiusAxis />\n                <Radar\n                    name=\"Received\"\n                    dataKey=\"values\"\n                    stroke=\"#FF8042\"\n                    fill=\"#FF8042\"\n                    fillOpacity={0.6}\n                />\n                <Tooltip />\n            </RadarChart>\n        </div>\n    );\n};\n\nexport const Graph5Home = () => {\n    const graphdata = [\n        { name: \"M\", Received: 23, Sent: 9, amt: 2400 },\n        { name: \"T\", Received: 26, Sent: 10, amt: 2400 },\n        { name: \"W\", Received: 24, Sent: 15, amt: 2400 },\n        { name: \"T\", Received: 47, Sent: 24, amt: 2400 },\n        { name: \"F\", Received: 33, Sent: 13, amt: 2400 },\n        { name: \"S\", Received: 11, Sent: 2, amt: 2400 },\n        { name: \"S\", Received: 10, Sent: 3, amt: 2400 },\n    ];\n\n    return (\n        <div>\n            <div className=\"graph-title\">Sent vs Received</div>\n            <LineChart\n                width={410}\n                height={160}\n                data={graphdata}\n                margin={{\n                    top: 20,\n                    right: 20,\n                    left: -30,\n                    bottom: 0,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line\n                    type=\"monotone\"\n                    dataKey=\"Received\"\n                    stroke=\"#40a1f1\"\n                    activeDot={{ r: 8 }}\n                />\n                <Line type=\"monotone\" dataKey=\"Sent\" stroke=\"#65AD50\" />\n            </LineChart>\n        </div>\n    );\n};\n\nexport const Graph6Home = () => {\n    const graphdata = [\n        { name: \"Monday\", Total: 23 },\n        { name: \"Tuesday\", Total: 26 },\n        { name: \"Wednesday\", Total: 24 },\n        { name: \"Thursday\", Total: 47 },\n        { name: \"Friday\", Total: 33 },\n        { name: \"Sunday\", Total: 11 },\n        { name: \"Sunday\", Total: 10 },\n    ];\n\n    var graphdata1 = [];\n    var weeks = [\"7 days (current)\", \"7 days (previous)\"];\n    var total1 = 0;\n    var total2 = 146;\n\n    for (var i = 0; i < 7; i++) {\n        total1 += graphdata[i].Total;\n    }\n\n    var value1 = { Weeks: weeks[0], Total: total1 };\n    var value2 = { Weeks: weeks[1], Total: total2 };\n    graphdata1.push(value2);\n    graphdata1.push(value1);\n\n    return (\n        <div>\n            <div className=\"graph-title\">Weekly Trend (Received)</div>\n            <LineChart\n                width={260}\n                height={155}\n                data={graphdata1}\n                margin={{\n                    top: 20,\n                    right: 30,\n                    left: 10,\n                    bottom: 0,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"Weeks\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line\n                    type=\"monotone\"\n                    dataKey=\"Total\"\n                    stroke=\"#65AD50\"\n                    activeDot={{ r: 10 }}\n                />\n            </LineChart>\n        </div>\n    );\n};\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\n\nimport logo from \"../images/logo.png\";\nimport \"../styles/App.css\";\nimport { GoogleBtn } from \"./components/GoogleBtn\";\n\nimport {\n    Graph1Home,\n    Graph2Home,\n    Graph3Home,\n    Graph4Home,\n    Graph5Home,\n    Graph6Home,\n} from \"./components/GraphsHome\";\n\nexport default (props) => (\n    <div>\n        <div id=\"home-icon\">\n            <img id=\"logo-img\" src={logo} alt=\"insightBox\" />\n        </div>\n        <div id=\"title-main\">\n            <div id=\"title1\">insightBox</div>\n            <div id=\"title2\">insights on your inbox</div>\n            <div id=\"connect\">\n                <GoogleBtn />\n            </div>\n        </div>\n\n        <div className=\"homepage-slide\" style={{ color: \"#000\" }}>\n            <div id=\"home-graph1\">\n                <Graph1Home />\n            </div>\n\n            <div id=\"home-graph2\">\n                <Graph2Home />\n            </div>\n\n            <div id=\"home-graph3\">\n                <Graph3Home />\n            </div>\n\n            <div id=\"home-graph4\">\n                <Graph4Home />\n            </div>\n\n            <div id=\"home-graph5\">\n                <Graph5Home />\n            </div>\n\n            <div id=\"home-graph6\">\n                <Graph6Home />\n            </div>\n        </div>\n\n        <div className=\"footer\" sx={{ color: \"muted\" }}>\n            Graphs from <a href=\"https://recharts.org/en-US\">Recharts</a>\n        </div>\n    </div>\n);\n","import React from \"react\";\nimport \"../styles/App.css\";\n\nexport default () => {\n    return (\n        <div className=\"homepage-content-about\">\n            <div className=\"homepage-content-about-text\">\n                <br />\n                <br />\n                <h1>About</h1>\n                <p>\n                    <b>insightBox</b> is a web application that displays\n                    statistics and insights based on a user's Gmail account. It\n                    is aimed at working professionals who use email with the\n                    purpose to increase productivity and optimise their time\n                    spent in inbox.\n                </p>\n                <p>\n                    The application gets user data by using the OAuth 2.0\n                    protocol along with the Google API.\n                </p>\n                <br />\n                <p>\n                    Email metadata is downloaded and processed by the server to\n                    generate analytics. Metadata includes:{\" \"}\n                </p>\n                <div id=\"ul-about\">\n                    <ul>\n                        <li>Subject title</li>\n                        <li>Date/time</li>\n                        <li>Sender information</li>\n                        <li>Recipient information</li>\n                    </ul>\n                </div>\n                <br />\n                <h2>End-to-End Post-Quantum Security</h2>\n                <p>\n                    Privacy is important so sensitive data like subject title\n                    and sender/recipient information are encrypted. insightBox\n                    uses quantum-resistant, end-to-end encryption to send\n                    sensitive data from the server to the user using\n                    CRYSTALS-KYBER and AES-256.\n                </p>\n                <br />\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\nimport \"../styles/App.css\";\n\nexport default () => (\n    <div>\n        <div className=\"homepage-content-pptos\">\n            <h1>Privacy Policy</h1>\n            <p>Last modified: 6 September 2020</p>\n            <p>\n                Our email analytics service at <b>insightbox.xyz</b> is\n                committed to the privacy and security of the information that we\n                collect, process, analyse and store from our users when using\n                our application. This policy outlines what data we collect from\n                our users, how we use it and the current security of the site.\n            </p>\n            <p>\n                We may change this policy over time, ensure to check back every\n                now and again.\n            </p>\n            <h2>What data we collect</h2>\n            <p>\n                We collect a user's Google account information to sign up and\n                create an account on the system for the user.\n            </p>\n            <p>\n                When processing and displaying insights and analytics on a\n                user's Gmail inbox, we retrieve email metadata such as:{\" \"}\n            </p>\n            <ul>\n                <li>Subject Title</li>\n                <li>Time sent/received</li>\n                <li>Recipient information</li>\n                <li>Sender information</li>\n            </ul>\n            <h2>How we collect this data</h2>\n            <p>\n                When a user signs up with their Google account, we use Google's\n                API to retrieve their data securely using the OAuth 2.0\n                protocol. Authorised requests are then sent to the user's Gmail\n                account to retrieve email metadata of the user's inbox.\n            </p>\n            <p>\n                Google’s API Terms may be accessed at:{\" \"}\n                <a href=\"https://developers.google.com/terms/\">\n                    https://developers.google.com/terms/.\n                </a>\n            </p>\n            <h2>How we use this data</h2>\n            <p>\n                We use the data we collect to provide analytics and insights for\n                our users and nothing more.\n            </p>\n            <h2>Disclosure of information</h2>\n            <p>\n                We do not disclose your information to any external third\n                parties.\n            </p>\n            <h2>Security</h2>\n            <p>\n                This website is still under development so we can't currently\n                guarantee the confidentiality of the information that you\n                provide.\n            </p>\n            <h2>Contact</h2>\n            <p>insightbox.analytics@gmail.com</p>\n            <br />\n        </div>\n    </div>\n);\n","import React from \"react\";\nimport \"../styles/App.css\";\n\nexport default () => (\n    <div>\n        <div className=\"homepage-content-pptos\">\n            <h1>Terms of Use</h1>\n            <p>Last modified: 6 September 2020</p>\n            <p>\n                By creating an account and allowing the site access to process\n                your Google account and email metadata, you accept and agree to\n                the terms of use and privacy policy of <b>insightbox.xyz</b>.\n                Please read this carefully and if you do not agree, then do not\n                create an account on this site.\n            </p>\n            <p>\n                We may change the terms of use over time, ensure to check back\n                every now and again.\n            </p>\n            <h2>Website Availability</h2>\n            <p>\n                The website may be unavailable at times due to it still being\n                under development. Sorry if it causes any inconveniences.\n            </p>\n            <h2>Security</h2>\n            <p>\n                We do our best to ensure the security of users' data stored on\n                our system. However in the unlikely event that user data is\n                leaked or compromised, we are not liable for any damages\n                suffered due to this data being exposed or stolen. When creating\n                an account on our site you are aware of the possibility of this\n                and sign up at your own discretion and take full responsibility\n                for this action.\n            </p>\n            <p>\n                We endeavor to be transparent in the way we handle, process and\n                store user data. As such, it is up to you, the user, to make an\n                informed decision when creating an account and allowing the\n                system access to your information.\n            </p>\n            <h2>Intellectual Property</h2>\n            <p>\n                The entire website and its contents (apart from the data you\n                provided) is solely and wholly owned by the company{\" \"}\n                <b>insightbox.xyz</b>.\n            </p>\n            <h2>Prohibited Uses</h2>\n            <p>\n                You must not use this site or its services for any unlawful\n                purposes. This includes anything that violates any applicable\n                federal, state, local or international laws. You additionally\n                agree not to damage, break or attempt to disable the website.\n            </p>\n            <h2>Termination</h2>\n            <p>\n                We retain the right to terminate the user's account and prevent\n                them from making another one. Upon termination any and all data\n                relating to that user is deleted.\n            </p>\n            <h2>Liability</h2>\n            <p>\n                By creating an account on <b>insightbox.xyz</b> you agree that\n                we are not liable for any damages, inconveniences or detriment\n                suffered as a result of you using our site and its services. You\n                create an account at your own discretion and take full\n                responsibility of this action.\n            </p>\n            <h2>Location</h2>\n            <p>\n                The site, company and developers of the system are based in\n                Australia. We comply with our local, state and national laws.\n                Users outside of Australia are responsible for compliance with\n                their own local, state or national laws.{\" \"}\n            </p>\n            <h2>Contact</h2>\n            <p>insightbox.analytics@gmail.com</p>\n            <br />\n        </div>\n    </div>\n);\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Dashboard extends React.Component {\n    render() {\n        return (\n            <div id=\"dash-container\">\n                dashboard\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Dashboard);\n","import React from \"react\";\nimport \"../styles/App.css\";\n\n// import graphql and create client\nimport { createClient } from \"urql\";\n\n\n// create custom client for this page where no token should exist\nconst client = createClient({\n    url: \"https://insightbox.xyz/api\",\n});\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n        // check if we have a auth code in URL\n        const url = new URLSearchParams(window.location.search);\n        const code = url.get(\"code\");\n\n        // do a check for the code and check we didn't accidentally come back to this page with same code\n        if (code != null && code !== localStorage.getItem(\"old_code\")) {\n            localStorage.setItem(\"old_code\", code);\n            client\n                .mutation(\n                    `\n      mutation{\n        signIn(authCode: \"${code}\")\n      }`\n                )\n                .toPromise()\n                .then((result) => {\n                    if (result.data) {\n                        if (result.data.signIn) {\n                            localStorage.setItem(\"token\", result.data.signIn);\n                            console.log(\"token saved\");\n                        } else {\n                            console.log(\"returned token blank (auth error)\");\n                        }\n                    } else {\n                        console.log(\"server aint up now is it\");\n                    }\n\n                    window.close();\n                });\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div class=\"homepage-content\">\n                    <br />\n                    <br />\n                    <br />\n                    <br />\n                    <div class=\"loader1\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SignIn;\n","import React from \"react\";\nimport \"./styles/App.css\";\n\n// import modules\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { createClient, Provider } from \"urql\";\n\n// import theme\nimport { ThemeProvider } from \"theme-ui\";\nimport theme from \"./styles/theme\";\n\n// import all components\nimport NavBar from \"./pages/components/NavBar\";\n\n// import all pages\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport PrivacyPolicy from \"./pages/PrivacyPolicy\";\nimport TermsOfUse from \"./pages/TermsofUse\";\nimport Dashboard from \"./pages/Dashboard\";\nimport SignIn from \"./pages/SignIn\";\n\nconst client = createClient({\n    url: \"https://insightbox.xyz/api\",\n    fetchOptions: () => {\n        const token = localStorage.getItem(\"token\");\n        return {\n            headers: { authorization: token ? token : \"\" },\n        };\n    },\n});\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <div className=\"App\">\n                <Provider value={client}>\n                    <BrowserRouter>\n                        <NavBar />\n                        <Switch>\n                            <Route path=\"/about\">\n                                <About />\n                            </Route>\n                            <Route path=\"/privacypolicy\">\n                                <PrivacyPolicy />\n                            </Route>\n                            <Route path=\"/termsofuse\">\n                                <TermsOfUse />\n                            </Route>\n                            <Route path=\"/termsofuse\">\n                                <TermsOfUse />\n                            </Route>\n                            <Route path=\"/dashboard\">\n                                <Dashboard />\n                            </Route>\n                            <Route path=\"/signin\" component={SignIn}></Route>\n                            <Route path=\"/\">\n                                <Home />\n                            </Route>\n                        </Switch>\n                    </BrowserRouter>\n                </Provider>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <div>\n        <App /> {}\n    </div>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// test 4 sam\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5ff63d61.png\";"],"sourceRoot":""}